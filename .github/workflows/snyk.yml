name: Snyk Security Scan with Automated Tests and Docker Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 1'  # chaque lundi Ã  minuit

jobs:
  snyk_and_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Freeze dependencies to requirements.txt
        run: |
          source venv/bin/activate
          pip freeze > requirements.txt

      - name: Snyk scan (Python)
        uses: snyk/actions/python@master
        with:
          command: test
          args: --file=requirements.txt --json-file-output=snyk-python.json --sarif-file-output=snyk-python.sarif
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install React dependencies
        working-directory: ./frontend-react
        run: npm install

      - name: Snyk scan (Node.js)
        working-directory: ./frontend-react
        run: npx snyk test --file=package.json --json-file-output=snyk-node.json --sarif-file-output=snyk-node.sarif
        continue-on-error: false
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Analysis
        uses: snyk/actions/node@master
        with:
          command: code test
          args: --json-file-output=snyk-code.json --sarif-file-output=snyk-code.sarif
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Generate HTML reports
        run: |
          npm install -g snyk-to-html
          snyk-to-html -i snyk-python.json -o snyk-python-report.html || true
          snyk-to-html -i snyk-node.json -o snyk-node-report.html || true
          snyk-to-html -i snyk-code.json -o snyk-code-report.html || true
        continue-on-error: true

      - name: Upload HTML reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            *.html
            snyk-*.json

      - name: Upload Python SARIF
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk-python.sarif
          category: python

      - name: Upload Node.js SARIF
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk-node.sarif
          category: node

      - name: Upload Code SARIF
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk-code.sarif
          category: code

  advanced_security:
    needs: snyk_and_tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

  docker_build_and_push:
    needs: snyk_and_tests
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fullstack-app:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/fullstack-app:latest
